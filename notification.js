import PushNotificationIOS from "@react-native-community/push-notification-ios";
var PushNotification = require("react-native-push-notification");
import { Platform, Linking } from 'react-native'

PushNotification.configure({
    // (optional) Called when Token is generated (iOS and Android)
    
    onRegister(token) {
      // eslint-disable-next-line no-console
      console.log('TOKEN:', token);
    },
    largeIcon: 'ic_launcher',
    smallIcon: 'ic_notification',
    onNotification(notification) {
      const url = `deeplinkspike://home/secondscreen/${notification.color}`
    Linking.canOpenURL(url).then(async(data)=>{
      if (data) {
        // Opening the link with some app, if the URL scheme is "http" the web link should be opened
        // by some browser in the mobile
        await Linking.openURL(url);
      } else {
        Alert.alert(`Don't know how to open this URL: ${url}`);
      }
    })

    
      // eslint-disable-next-line no-console
  
      // process the notification
  
      // required on iOS only (see fetchCompletionHandler docs: https://github.com/react-native-community/react-native-push-notification-ios)
      notification.finish(PushNotificationIOS.FetchResult.NoData);
    },
  
    permissions: {
      alert: true,
      badge: true,
      sound: true
    },
  
    // Should the initial notification be popped automatically
    // default: true
    popInitialNotification: true,
  
    /**
     * (optional) default: true
     * - Specified if permissions (ios) and token (android and ios) will requested or not,
     * - if not, you must call PushNotificationsHandler.requestPermissions() later
     */
    requestPermissions: Platform.OS === 'ios'
  }); 

  export const TestNotification = () => {
    PushNotification.localNotification({
      id: '821872', // (optional) Valid unique 32 bit integer specified as string. default: Autogenerated Unique ID
      ticker: 'My Notification Ticker',
      autoCancel: true, // (optional) default: true
      largeIcon: 'ic_launcher', // (optional) default: "ic_launcher"
      smallIcon: 'ic_notification', // (optional) default: "ic_notification" with fallback for "ic_launcher"
      bigText: 'Birthday in 0 day', // (optional) default: "message" prop
      color: '#814F91', // (optional) default: system default
      vibrate: true, // (optional) default: true
      vibration: 300, // vibration length in milliseconds, ignored if vibrate=false, default: 1000
      tag: 'some_tag', // (optional) add tag to message
      group: 'group', // (optional) add group to message
      priority: 'high', // (optional) set notification priority, default: high
      visibility: 'private', // (optional) set notification visibility, default: private
      importance: 'high', // (optional) set notification importance, default: high
      title: 'Name', // (optional)
      message: 'Birthday in 0 day', // (required)
      playSound: false, // (optional) default: true
      soundName: 'jingle', // (optional) Sound to play when the notification is shown. Value of 'default' plays the default sound. It can be set to a custom sound such as 'android.resource://com.xyz/raw/my_sound'. It will look for the 'my_sound' audio file in 'res/raw' directory and play it. default: 'default' (default sound is played)
      date: new Date(Date.now()),
      aps: {
        'content-available': 1
      },
    });
  };